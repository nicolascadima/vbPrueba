'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.34014
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.34014.
'
Namespace WSEDV
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiciosSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Servicios
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RegistrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarRenovacionAutomaticaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarRedencionAnticipadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarPagoCuponOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestConectionEdvbPCUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SolicitudBloqueoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SolicitudDesbloqueoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarCUIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferenciaDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DesmaterializacionSecDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConciliacionDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WindowsApplication1.My.MySettings.Default.WindowsApplication1_WSEDV_Servicios
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RegistrarCompleted As RegistrarCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarRenovacionAutomaticaCompleted As RegistrarRenovacionAutomaticaCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarRedencionAnticipadaCompleted As RegistrarRedencionAnticipadaCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarPagoCuponCompleted As RegistrarPagoCuponCompletedEventHandler
        
        '''<remarks/>
        Public Event TestConectionEdvbPCUCompleted As TestConectionEdvbPCUCompletedEventHandler
        
        '''<remarks/>
        Public Event SolicitudBloqueoCompleted As SolicitudBloqueoCompletedEventHandler
        
        '''<remarks/>
        Public Event SolicitudDesbloqueoCompleted As SolicitudDesbloqueoCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarCUICompleted As ActualizarCUICompletedEventHandler
        
        '''<remarks/>
        Public Event TransferenciaDPFCompleted As TransferenciaDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event DesmaterializacionSecDPFCompleted As DesmaterializacionSecDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDPFCompleted As ConsultarDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ConciliacionDPFCompleted As ConciliacionDPFCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Registrar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Registrar(ByVal pStrCodDesmaterializado As String) As String
            Dim results() As Object = Me.Invoke("Registrar", New Object() {pStrCodDesmaterializado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarAsync(ByVal pStrCodDesmaterializado As String)
            Me.RegistrarAsync(pStrCodDesmaterializado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarAsync(ByVal pStrCodDesmaterializado As String, ByVal userState As Object)
            If (Me.RegistrarOperationCompleted Is Nothing) Then
                Me.RegistrarOperationCompleted = AddressOf Me.OnRegistrarOperationCompleted
            End If
            Me.InvokeAsync("Registrar", New Object() {pStrCodDesmaterializado}, Me.RegistrarOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarCompleted(Me, New RegistrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarRenovacionAutomatica", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarRenovacionAutomatica(ByVal pStrCodDesmaterializado As String) As String
            Dim results() As Object = Me.Invoke("RegistrarRenovacionAutomatica", New Object() {pStrCodDesmaterializado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarRenovacionAutomaticaAsync(ByVal pStrCodDesmaterializado As String)
            Me.RegistrarRenovacionAutomaticaAsync(pStrCodDesmaterializado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarRenovacionAutomaticaAsync(ByVal pStrCodDesmaterializado As String, ByVal userState As Object)
            If (Me.RegistrarRenovacionAutomaticaOperationCompleted Is Nothing) Then
                Me.RegistrarRenovacionAutomaticaOperationCompleted = AddressOf Me.OnRegistrarRenovacionAutomaticaOperationCompleted
            End If
            Me.InvokeAsync("RegistrarRenovacionAutomatica", New Object() {pStrCodDesmaterializado}, Me.RegistrarRenovacionAutomaticaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarRenovacionAutomaticaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarRenovacionAutomaticaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarRenovacionAutomaticaCompleted(Me, New RegistrarRenovacionAutomaticaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarRedencionAnticipada", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarRedencionAnticipada(ByVal pStrCodDesmaterializado As String) As String
            Dim results() As Object = Me.Invoke("RegistrarRedencionAnticipada", New Object() {pStrCodDesmaterializado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarRedencionAnticipadaAsync(ByVal pStrCodDesmaterializado As String)
            Me.RegistrarRedencionAnticipadaAsync(pStrCodDesmaterializado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarRedencionAnticipadaAsync(ByVal pStrCodDesmaterializado As String, ByVal userState As Object)
            If (Me.RegistrarRedencionAnticipadaOperationCompleted Is Nothing) Then
                Me.RegistrarRedencionAnticipadaOperationCompleted = AddressOf Me.OnRegistrarRedencionAnticipadaOperationCompleted
            End If
            Me.InvokeAsync("RegistrarRedencionAnticipada", New Object() {pStrCodDesmaterializado}, Me.RegistrarRedencionAnticipadaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarRedencionAnticipadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarRedencionAnticipadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarRedencionAnticipadaCompleted(Me, New RegistrarRedencionAnticipadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarPagoCupon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarPagoCupon(ByVal pStrCodDesmaterializado As String, ByVal pIntNroCupon As Integer) As String
            Dim results() As Object = Me.Invoke("RegistrarPagoCupon", New Object() {pStrCodDesmaterializado, pIntNroCupon})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarPagoCuponAsync(ByVal pStrCodDesmaterializado As String, ByVal pIntNroCupon As Integer)
            Me.RegistrarPagoCuponAsync(pStrCodDesmaterializado, pIntNroCupon, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarPagoCuponAsync(ByVal pStrCodDesmaterializado As String, ByVal pIntNroCupon As Integer, ByVal userState As Object)
            If (Me.RegistrarPagoCuponOperationCompleted Is Nothing) Then
                Me.RegistrarPagoCuponOperationCompleted = AddressOf Me.OnRegistrarPagoCuponOperationCompleted
            End If
            Me.InvokeAsync("RegistrarPagoCupon", New Object() {pStrCodDesmaterializado, pIntNroCupon}, Me.RegistrarPagoCuponOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarPagoCuponOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarPagoCuponCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarPagoCuponCompleted(Me, New RegistrarPagoCuponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestConectionEdvbPCU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TestConectionEdvbPCU() As String
            Dim results() As Object = Me.Invoke("TestConectionEdvbPCU", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TestConectionEdvbPCUAsync()
            Me.TestConectionEdvbPCUAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestConectionEdvbPCUAsync(ByVal userState As Object)
            If (Me.TestConectionEdvbPCUOperationCompleted Is Nothing) Then
                Me.TestConectionEdvbPCUOperationCompleted = AddressOf Me.OnTestConectionEdvbPCUOperationCompleted
            End If
            Me.InvokeAsync("TestConectionEdvbPCU", New Object(-1) {}, Me.TestConectionEdvbPCUOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestConectionEdvbPCUOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestConectionEdvbPCUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestConectionEdvbPCUCompleted(Me, New TestConectionEdvbPCUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SolicitudBloqueo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SolicitudBloqueo(ByVal pStrXml As String) As String
            Dim results() As Object = Me.Invoke("SolicitudBloqueo", New Object() {pStrXml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SolicitudBloqueoAsync(ByVal pStrXml As String)
            Me.SolicitudBloqueoAsync(pStrXml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SolicitudBloqueoAsync(ByVal pStrXml As String, ByVal userState As Object)
            If (Me.SolicitudBloqueoOperationCompleted Is Nothing) Then
                Me.SolicitudBloqueoOperationCompleted = AddressOf Me.OnSolicitudBloqueoOperationCompleted
            End If
            Me.InvokeAsync("SolicitudBloqueo", New Object() {pStrXml}, Me.SolicitudBloqueoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSolicitudBloqueoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SolicitudBloqueoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SolicitudBloqueoCompleted(Me, New SolicitudBloqueoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SolicitudDesbloqueo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SolicitudDesbloqueo(ByVal pStrXml As String) As String
            Dim results() As Object = Me.Invoke("SolicitudDesbloqueo", New Object() {pStrXml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SolicitudDesbloqueoAsync(ByVal pStrXml As String)
            Me.SolicitudDesbloqueoAsync(pStrXml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SolicitudDesbloqueoAsync(ByVal pStrXml As String, ByVal userState As Object)
            If (Me.SolicitudDesbloqueoOperationCompleted Is Nothing) Then
                Me.SolicitudDesbloqueoOperationCompleted = AddressOf Me.OnSolicitudDesbloqueoOperationCompleted
            End If
            Me.InvokeAsync("SolicitudDesbloqueo", New Object() {pStrXml}, Me.SolicitudDesbloqueoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSolicitudDesbloqueoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SolicitudDesbloqueoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SolicitudDesbloqueoCompleted(Me, New SolicitudDesbloqueoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizarCUI", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarCUI(ByVal pStrCodDesmaterializado As String, ByVal pStrCUI As String) As String
            Dim results() As Object = Me.Invoke("ActualizarCUI", New Object() {pStrCodDesmaterializado, pStrCUI})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarCUIAsync(ByVal pStrCodDesmaterializado As String, ByVal pStrCUI As String)
            Me.ActualizarCUIAsync(pStrCodDesmaterializado, pStrCUI, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarCUIAsync(ByVal pStrCodDesmaterializado As String, ByVal pStrCUI As String, ByVal userState As Object)
            If (Me.ActualizarCUIOperationCompleted Is Nothing) Then
                Me.ActualizarCUIOperationCompleted = AddressOf Me.OnActualizarCUIOperationCompleted
            End If
            Me.InvokeAsync("ActualizarCUI", New Object() {pStrCodDesmaterializado, pStrCUI}, Me.ActualizarCUIOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarCUIOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarCUICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarCUICompleted(Me, New ActualizarCUICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferenciaDPF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferenciaDPF(ByVal pStrXml As String) As String
            Dim results() As Object = Me.Invoke("TransferenciaDPF", New Object() {pStrXml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferenciaDPFAsync(ByVal pStrXml As String)
            Me.TransferenciaDPFAsync(pStrXml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferenciaDPFAsync(ByVal pStrXml As String, ByVal userState As Object)
            If (Me.TransferenciaDPFOperationCompleted Is Nothing) Then
                Me.TransferenciaDPFOperationCompleted = AddressOf Me.OnTransferenciaDPFOperationCompleted
            End If
            Me.InvokeAsync("TransferenciaDPF", New Object() {pStrXml}, Me.TransferenciaDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferenciaDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferenciaDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferenciaDPFCompleted(Me, New TransferenciaDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DesmaterializacionSecDPF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DesmaterializacionSecDPF(ByVal pStrXml As String) As String
            Dim results() As Object = Me.Invoke("DesmaterializacionSecDPF", New Object() {pStrXml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DesmaterializacionSecDPFAsync(ByVal pStrXml As String)
            Me.DesmaterializacionSecDPFAsync(pStrXml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DesmaterializacionSecDPFAsync(ByVal pStrXml As String, ByVal userState As Object)
            If (Me.DesmaterializacionSecDPFOperationCompleted Is Nothing) Then
                Me.DesmaterializacionSecDPFOperationCompleted = AddressOf Me.OnDesmaterializacionSecDPFOperationCompleted
            End If
            Me.InvokeAsync("DesmaterializacionSecDPF", New Object() {pStrXml}, Me.DesmaterializacionSecDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnDesmaterializacionSecDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.DesmaterializacionSecDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DesmaterializacionSecDPFCompleted(Me, New DesmaterializacionSecDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarDPF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDPF(ByVal pStrSerie As String, ByVal pStrNroOperacion As String) As String
            Dim results() As Object = Me.Invoke("ConsultarDPF", New Object() {pStrSerie, pStrNroOperacion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDPFAsync(ByVal pStrSerie As String, ByVal pStrNroOperacion As String)
            Me.ConsultarDPFAsync(pStrSerie, pStrNroOperacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDPFAsync(ByVal pStrSerie As String, ByVal pStrNroOperacion As String, ByVal userState As Object)
            If (Me.ConsultarDPFOperationCompleted Is Nothing) Then
                Me.ConsultarDPFOperationCompleted = AddressOf Me.OnConsultarDPFOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDPF", New Object() {pStrSerie, pStrNroOperacion}, Me.ConsultarDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDPFCompleted(Me, New ConsultarDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConciliacionDPF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConciliacionDPF(ByVal pStrOperacion As String, ByVal pDTFeoperacion As String, ByVal pIntNroOperacion As String) As String
            Dim results() As Object = Me.Invoke("ConciliacionDPF", New Object() {pStrOperacion, pDTFeoperacion, pIntNroOperacion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConciliacionDPFAsync(ByVal pStrOperacion As String, ByVal pDTFeoperacion As String, ByVal pIntNroOperacion As String)
            Me.ConciliacionDPFAsync(pStrOperacion, pDTFeoperacion, pIntNroOperacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConciliacionDPFAsync(ByVal pStrOperacion As String, ByVal pDTFeoperacion As String, ByVal pIntNroOperacion As String, ByVal userState As Object)
            If (Me.ConciliacionDPFOperationCompleted Is Nothing) Then
                Me.ConciliacionDPFOperationCompleted = AddressOf Me.OnConciliacionDPFOperationCompleted
            End If
            Me.InvokeAsync("ConciliacionDPF", New Object() {pStrOperacion, pDTFeoperacion, pIntNroOperacion}, Me.ConciliacionDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnConciliacionDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConciliacionDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConciliacionDPFCompleted(Me, New ConciliacionDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub RegistrarCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub RegistrarRenovacionAutomaticaCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarRenovacionAutomaticaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarRenovacionAutomaticaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub RegistrarRedencionAnticipadaCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarRedencionAnticipadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarRedencionAnticipadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub RegistrarPagoCuponCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarPagoCuponCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarPagoCuponCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub TestConectionEdvbPCUCompletedEventHandler(ByVal sender As Object, ByVal e As TestConectionEdvbPCUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TestConectionEdvbPCUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SolicitudBloqueoCompletedEventHandler(ByVal sender As Object, ByVal e As SolicitudBloqueoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SolicitudBloqueoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SolicitudDesbloqueoCompletedEventHandler(ByVal sender As Object, ByVal e As SolicitudDesbloqueoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SolicitudDesbloqueoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ActualizarCUICompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarCUICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarCUICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub TransferenciaDPFCompletedEventHandler(ByVal sender As Object, ByVal e As TransferenciaDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferenciaDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DesmaterializacionSecDPFCompletedEventHandler(ByVal sender As Object, ByVal e As DesmaterializacionSecDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DesmaterializacionSecDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConsultarDPFCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub ConciliacionDPFCompletedEventHandler(ByVal sender As Object, ByVal e As ConciliacionDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConciliacionDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
